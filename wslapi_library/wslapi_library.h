#pragma once

#ifndef WSLAPI_LIBRARY_H
#define WSLAPI_LIBRARY_H

#include "wslapi_library_def.h"

#include <WinSock2.h>
#include <Windows.h>
#include <winapifamily.h>
#include <wslapi.h>

#ifndef ERROR_LINUX_SUBSYSTEM_NOT_PRESENT
#define ERROR_LINUX_SUBSYSTEM_NOT_PRESENT 414L
#endif // !ERROR_LINUX_SUBSYSTEM_NOT_PRESENT

typedef BOOL(STDAPICALLTYPE* WSL_IS_DISTRIBUTION_REGISTERED)(PCWSTR);
typedef HRESULT(STDAPICALLTYPE* WSL_REGISTER_DISTRIBUTION)(PCWSTR, PCWSTR);
typedef HRESULT(STDAPICALLTYPE* WSL_CONFIGURE_DISTRIBUTION)(PCWSTR, ULONG, WSL_DISTRIBUTION_FLAGS);
typedef HRESULT(STDAPICALLTYPE* WSL_GET_DISTRIBUTION_CONFIGURATION)(PCWSTR, ULONG*, ULONG*, WSL_DISTRIBUTION_FLAGS*, PSTR**, ULONG*);
typedef HRESULT(STDAPICALLTYPE* WSL_LAUNCH_INTERACTIVE)(PCWSTR, PCWSTR, BOOL, DWORD*);
typedef HRESULT(STDAPICALLTYPE* WSL_LAUNCH)(PCWSTR, PCWSTR, BOOL, HANDLE, HANDLE, HANDLE, HANDLE*);

class WSLAPI_LIBRARY_API wslapi_library
{
public:
	static wslapi_library& load();

	wslapi_library(wslapi_library&) = delete;
private:
	wslapi_library();
	~wslapi_library();

	HMODULE _wslApiDll;
	WSL_IS_DISTRIBUTION_REGISTERED _isDistributionRegistered;
	WSL_REGISTER_DISTRIBUTION _registerDistribution;
	WSL_CONFIGURE_DISTRIBUTION _configureDistribution;
	WSL_LAUNCH_INTERACTIVE _launchInteractive;
	WSL_LAUNCH _launch;
};
#endif // !WSLAPI_LIBRARY_H
